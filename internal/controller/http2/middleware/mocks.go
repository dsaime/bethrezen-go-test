// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery
// template: testify

package middleware

import (
	mock "github.com/stretchr/testify/mock"
)

// NewMockTokenVerifier creates a new instance of MockTokenVerifier. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockTokenVerifier(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockTokenVerifier {
	mock := &MockTokenVerifier{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// MockTokenVerifier is an autogenerated mock type for the TokenVerifier type
type MockTokenVerifier struct {
	mock.Mock
}

type MockTokenVerifier_Expecter struct {
	mock *mock.Mock
}

func (_m *MockTokenVerifier) EXPECT() *MockTokenVerifier_Expecter {
	return &MockTokenVerifier_Expecter{mock: &_m.Mock}
}

// VerifyToken provides a mock function for the type MockTokenVerifier
func (_mock *MockTokenVerifier) VerifyToken(token string) bool {
	ret := _mock.Called(token)

	if len(ret) == 0 {
		panic("no return value specified for VerifyToken")
	}

	var r0 bool
	if returnFunc, ok := ret.Get(0).(func(string) bool); ok {
		r0 = returnFunc(token)
	} else {
		r0 = ret.Get(0).(bool)
	}
	return r0
}

// MockTokenVerifier_VerifyToken_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'VerifyToken'
type MockTokenVerifier_VerifyToken_Call struct {
	*mock.Call
}

// VerifyToken is a helper method to define mock.On call
//   - token string
func (_e *MockTokenVerifier_Expecter) VerifyToken(token interface{}) *MockTokenVerifier_VerifyToken_Call {
	return &MockTokenVerifier_VerifyToken_Call{Call: _e.mock.On("VerifyToken", token)}
}

func (_c *MockTokenVerifier_VerifyToken_Call) Run(run func(token string)) *MockTokenVerifier_VerifyToken_Call {
	_c.Call.Run(func(args mock.Arguments) {
		var arg0 string
		if args[0] != nil {
			arg0 = args[0].(string)
		}
		run(
			arg0,
		)
	})
	return _c
}

func (_c *MockTokenVerifier_VerifyToken_Call) Return(b bool) *MockTokenVerifier_VerifyToken_Call {
	_c.Call.Return(b)
	return _c
}

func (_c *MockTokenVerifier_VerifyToken_Call) RunAndReturn(run func(token string) bool) *MockTokenVerifier_VerifyToken_Call {
	_c.Call.Return(run)
	return _c
}
